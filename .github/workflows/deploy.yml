name: Deploy to Production

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy to Server 1 
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER1_IP }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            cd BirthdayReminderV2-Frontend-Backend-Server/
            git pull origin master

            cat > .env <<EOF
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
            POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
            BACKEND_PORT=${{ secrets.BACKEND_PORT }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            EOF


            sudo docker-compose stop front back
            sudo docker-compose rm -f front back

            sudo docker rmi $(sudo docker images "birthdayreminderv2-front" -q) || true
            sudo docker rmi $(sudo docker images "birthdayreminderv2-back" -q) || true

            sudo docker-compose build --no-cache front back
            sudo docker-compose up -d front back

      - name: Health Check Server 1
        run: |
          echo "Ожидание 15 секунд для стабилизации сервера 1..."
          sleep 15
          echo "Проверка доступности фронтенда на сервере 1..."
          curl -f http://${{ secrets.SERVER1_IP }}:5173 || { echo "Сервер 1 недоступен"; exit 1; }

      - name: Deploy to Server 2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER2_IP }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            cd BirthdayReminderV2-Frontend-Backend-Server/
            git pull origin master

            cat > .env <<EOF
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
            POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
            BACKEND_PORT=${{ secrets.BACKEND_PORT }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            EOF

            sudo docker-compose stop front back
            sudo docker-compose rm -f front back

            sudo docker rmi $(sudo docker images "birthdayreminderv2-front" -q) || true
            sudo docker rmi $(sudo docker images "birthdayreminderv2-back" -q) || true

            sudo docker-compose build --no-cache front back
            sudo docker-compose up -d front back

      - name: Health Check Server 2
        run: |
          echo "Ожидание 15 секунд для стабилизации сервера 2..."
          sleep 15
          echo "Проверка доступности фронтенда на сервере 2..."
          curl -f http://${{ secrets.SERVER2_IP }}:5173 || { echo "Сервер 2 недоступен"; exit 1; }
